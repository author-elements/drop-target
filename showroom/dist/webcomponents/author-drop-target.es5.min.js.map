{"version":3,"file":"author-drop-target.es5.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorDropTargetElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineAttributes({\n      accepts: {\n        default: '*'\n      },\n\n      mustMatch: {\n        default: 1\n      },\n\n      over: {\n        default: false\n      },\n\n      sortable: {\n        default: false\n      },\n\n      types: {\n        default: null\n      }\n    })\n\n    this.UTIL.defineProperties({\n      acceptedTypes: {\n        private: true,\n        readonly: true,\n        get: () => {\n          if (this.accepts === null) {\n            return null\n          }\n\n          return this.accepts.replace(/\\s+/g,' ').trim().split(' ')\n        }\n      },\n\n      dimensions: {\n        private: true,\n        readonly: true,\n        get: () => this.getBoundingClientRect()\n      },\n\n      draggable: {\n        private: true,\n        default: null\n      },\n\n      lastPointerClientPosition: {\n        private: true,\n        default: null\n      },\n\n      offsetPointerPosition: {\n        private: true,\n        default: null\n      },\n\n      willAcceptDrop: {\n        private: true,\n        default: false\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      applyDragHandlers: () => {\n        let { draggable } = this.PRIVATE\n\n        draggable.on('drag', this.PRIVATE.dragHandler)\n        draggable.on('drag.end', this.PRIVATE.dragendHandler)\n      },\n\n      getEventData: (evt, props = {}) => ({\n        cancelable: true,\n        composed: true,\n\n        detail: Object.assign({}, {\n          acceptedTypes: this.PRIVATE.acceptedTypes,\n          data: this.PRIVATE.draggable.data,\n          willAcceptDrop: this.PRIVATE.willAcceptDrop,\n          position: this.PRIVATE.getPointerPosition(evt),\n          source: this.PRIVATE.draggable\n        }, props)\n      }),\n\n      getPointerPosition: evt => {\n        let relative = {\n          height: this.offsetHeight,\n          width: this.offsetWidth\n        }\n\n        let left = evt.offsetX || this.PRIVATE.offsetPointerPosition.x\n        let top = evt.offsetY || this.PRIVATE.offsetPointerPosition.y\n        let right = relative.width - left\n        let bottom = relative.height - top\n\n        let position = {\n          x: left,\n          y: top,\n\n          top: {\n            px: top,\n            pct: this.UTIL.getPercentageDecimal(top, relative.height)\n          },\n\n          right: {\n            px: right,\n            pct: this.UTIL.getPercentageDecimal(right, relative.width)\n          },\n\n          bottom: {\n            px: bottom,\n            pct: this.UTIL.getPercentageDecimal(bottom, relative.height)\n          },\n\n          left: {\n            px: left,\n            pct: this.UTIL.getPercentageDecimal(left, relative.width)\n          }\n        }\n\n        return Object.assign({}, position, {\n          quadrant: this.PRIVATE.getDropQuadrant(position)\n        })\n      },\n\n      dragHandler: evt => {\n        let { draggable, dimensions, lastPointerClientPosition } = this.PRIVATE\n        let { client } = evt.detail.position\n        let isEntering = null\n        let isLeaving = null\n\n        let isOver = {\n          x: client.x >= dimensions.left && client.x <= dimensions.right,\n          y: client.y >= dimensions.top && client.y <= dimensions.bottom\n        }\n\n        if (lastPointerClientPosition !== null) {\n          isEntering = {\n            top: isOver.x && lastPointerClientPosition.y <= dimensions.top && client.y > dimensions.top,\n            right: isOver.y && lastPointerClientPosition.x >= dimensions.right && client.x < dimensions.right,\n            bottom: isOver.x && lastPointerClientPosition.y >= dimensions.bottom && client.y < dimensions.bottom,\n            left: isOver.y && lastPointerClientPosition.x <= dimensions.left && client.x > dimensions.left\n          }\n\n          isLeaving = {\n            top: isOver.x && lastPointerClientPosition.y >= dimensions.top && client.y < dimensions.top,\n            right: isOver.y && lastPointerClientPosition.x <= dimensions.right && client.x > dimensions.right,\n            bottom: isOver.x && lastPointerClientPosition.y <= dimensions.bottom && client.y > dimensions.bottom,\n            left: isOver.y && lastPointerClientPosition.x >= dimensions.left && client.x < dimensions.left\n          }\n        }\n\n        this.PRIVATE.offsetPointerPosition = {\n          x: client.x - dimensions.left,\n          y: client.y - dimensions.top\n        }\n\n        let isParent = this.contains(draggable)\n\n        if (isEntering !== null && Object.values(isEntering).some(Boolean)) {\n          let dragenterEvent = new CustomEvent('drag.enter', this.PRIVATE.getEventData(evt))\n          this.emit(dragenterEvent)\n\n          if (isParent) {\n            this.over = false\n            this.PRIVATE.willAcceptDrop = false\n          } else {\n            if (!dragenterEvent.defaultPrevented) {\n              this.emit(`drop.allow`)\n              this.over = true\n              this.PRIVATE.willAcceptDrop = true\n            }\n          }\n        }\n\n        if (isOver.x && isOver.y) {\n          if (!this.over) {\n            this.over = !isParent\n            this.emit(`drop.${isParent ? 'deny' : 'allow'}`, {})\n          }\n\n          this.emit(new CustomEvent('drag.over', this.PRIVATE.getEventData(evt)))\n        }\n\n        if (isLeaving !== null && Object.values(isLeaving).some(Boolean)) {\n          this.over = false\n          this.emit('drop.deny', {})\n          this.emit(new CustomEvent('drag.leave', this.PRIVATE.getEventData(evt)))\n        }\n\n        this.PRIVATE.lastPointerClientPosition = {\n          x: client.x,\n          y: client.y\n        }\n      },\n\n      getDropQuadrant: position => {\n        let x = 'left'\n        let y = 'top'\n\n        if (position.left.pct === .5) {\n          x = 'center'\n        }\n\n        if (position.left.pct > .5) {\n          x = 'right'\n        }\n\n        if (position.top.pct === .5) {\n          y = 'center'\n        }\n\n        if (position.top.pct > .5) {\n          y = 'bottom'\n        }\n\n        return `${y} ${x}`\n      },\n\n      dragendHandler: evt => {\n        let dropEvent = new CustomEvent('drop', this.PRIVATE.getEventData(evt))\n\n        if (this.over) {\n          this.emit(dropEvent)\n        }\n\n        if (dropEvent.defaultPrevented) {\n          console.log('PREVENTED');\n        }\n\n        this.PRIVATE.removeDragHandlers()\n        this.over = false\n        this.offsetPointerPosition = null\n      },\n\n      removeDragHandlers: () => {\n        this.PRIVATE.draggable.off('drag', this.PRIVATE.dragHandler)\n        this.PRIVATE.draggable.off('drag.end', this.PRIVATE.dragendHandler)\n      }\n    })\n\n    this.UTIL.registerListeners(this, {\n      'handshake.offered': evt => {\n        let { draggable, types } = evt.detail\n        let reject = false\n\n        switch (this.mustMatch) {\n          case 'all':\n          case '*':\n            if (!this.PRIVATE.acceptedTypes.every(type => types.includes(type))) {\n              reject = true\n            }\n            break\n\n          default:\n            if (!(this.PRIVATE.acceptedTypes.filter(type => types.includes(type)).length >= this.mustMatch)) {\n              reject = true\n            }\n        }\n\n        if (reject) {\n          return\n        }\n\n        this.emit('handshake.accepted', { dropTarget: this }, draggable)\n\n        this.PRIVATE.draggable = draggable\n        this.PRIVATE.applyDragHandlers()\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['accepts', 'sortable']\n  }\n}\n\ncustomElements.define('author-drop-target', AuthorDropTargetElement)\n\nexport default AuthorDropTargetElement\n"],"names":["AuthorDropTargetElement","UTIL","defineAttributes","accepts","default","mustMatch","over","sortable","types","defineProperties","acceptedTypes","private","readonly","get","_this","replace","trim","split","dimensions","getBoundingClientRect","draggable","lastPointerClientPosition","offsetPointerPosition","willAcceptDrop","definePrivateMethods","applyDragHandlers","PRIVATE","on","dragHandler","dragendHandler","getEventData","evt","props","cancelable","composed","detail","Object","assign","data","position","getPointerPosition","source","relative","height","offsetHeight","width","offsetWidth","left","offsetX","x","top","offsetY","y","right","bottom","px","pct","getPercentageDecimal","quadrant","getDropQuadrant","client","isEntering","isLeaving","isOver","isParent","contains","values","some","Boolean","dragenterEvent","CustomEvent","emit","defaultPrevented","dropEvent","console","log","removeDragHandlers","off","registerListeners","reject","every","type","includes","filter","length","dropTarget","AuthorBaseElement","HTMLElement","customElements","define"],"mappings":"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"}