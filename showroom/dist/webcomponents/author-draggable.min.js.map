{"version":3,"file":"author-draggable.min.js","sources":["../src/element.js"],"sourcesContent":["class AuthorDraggableElement extends AuthorBaseElement(HTMLElement) {\n  constructor () {\n    super(`{{TEMPLATE-STRING}}`)\n\n    this.UTIL.defineAttributes({\n      direction: {\n        default: null\n      },\n\n      disabled: {\n        default: false\n      },\n\n      free: {\n        default: false\n      },\n\n      'max-drag-distance': {\n        default: null\n      },\n\n      'min-drag-distance': {\n        default: null\n      },\n\n      type: {\n        default: null\n      },\n    })\n\n    this.UTIL.defineProperties({\n      acceptedConstraintKeys: {\n        private: true,\n        readonly: true,\n        default: [\n          'x',\n          'y',\n          'up',\n          'right',\n          'down',\n          'left'\n        ]\n      },\n\n      canDrop: {\n        private: true,\n        default: false\n      },\n\n      clone: {\n        private: true,\n        default: null\n      },\n\n      constraints: {\n        private: true,\n        readonly: true,\n        get: () => {\n          if (!this.direction) {\n            return null\n          }\n\n          return this.direction.replace(/\\s+/g,' ').trim().split(' ')\n        }\n      },\n\n      data: {\n        default: null\n      },\n\n      dimensions: {\n        private: true,\n        readonly: true,\n        get: () => this.getBoundingClientRect()\n      },\n\n      dragArea: {\n        private: true,\n        readonly: true,\n        get: () => {\n          let dragAreas = document.querySelectorAll('author-dragarea')\n\n          for (let dragArea of dragAreas) {\n            if (dragArea.contains(this)) {\n              return dragArea\n            }\n          }\n\n          return document.body\n        }\n      },\n\n      dragIsActive: {\n        private: true,\n        default: false\n      },\n\n      dropTargets: {\n        private: true,\n        default: null\n      },\n\n      initialPosition: {\n        private: true,\n        default: null\n      },\n\n      initialTimestamp: {\n        private: true,\n        default: null\n      },\n\n      pointerEventsSupported: {\n        private: true,\n        readonly: true,\n        default: window.PointerEvent === undefined ? false : true\n      },\n\n      pointerOffset: {\n        private: true,\n        default: null\n      },\n\n      userIsTouching: {\n        private: true,\n        default: false\n      },\n\n      types: {\n        private: true,\n        readonly: true,\n        get: () => {\n          if (!this.type) {\n            return null\n          }\n\n          return this.type.replace(/\\s+/g,' ').trim().split(' ')\n        }\n      }\n    })\n\n    this.UTIL.definePrivateMethods({\n      forwardEvent: (evt, newEvtName, detail = {}, target = this) => {\n        evt.preventDefault()\n\n        detail.originalEvent = evt\n\n        if (!this.PRIVATE.pointerEventsSupported) {\n          this.emit(newEvtName, detail, target)\n        }\n      },\n\n      // Polyfill for Firefox bug from 2002 :|\n      // window.getComputedStyle(el).cssText returns \"\"\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=137687\n      getComputedStylesCssText: element => {\n        let computed = window.getComputedStyle(element)\n        let acc = []\n\n        if (computed.cssText !== '') {\n          return computed.cssText\n        }\n\n        for (let property in computed) {\n          if (typeof computed[property] === 'string') {\n            acc.push(`${property}: ${computed[property]}`)\n          }\n        }\n\n        return acc.join('; ')\n      },\n\n      handshakeAcceptedHandler: evt => {\n        let { dropTarget } = evt.detail\n\n        this.PRIVATE.dropTargets.push(dropTarget)\n        dropTarget.on('drop.allow', evt => this.PRIVATE.canDrop = true)\n        dropTarget.on('drop.deny', evt => this.PRIVATE.canDrop = false)\n      },\n\n      initializeClone: () => {\n        this.setAttribute('dragging', '')\n\n        this.PRIVATE.clone = this.cloneNode(true)\n        this.PRIVATE.synchronizeStyles()\n        this.PRIVATE.clone.sourceElement = this\n\n        this.removeAttribute('dragging')\n        this.PRIVATE.clone.setAttribute('clone', '')\n\n        document.body.appendChild(this.PRIVATE.clone)\n      },\n\n      pointerupHandler: evt => {\n        let dragendEvent = new CustomEvent('drag.end', this.PRIVATE.getEventData(evt, {\n          drag: {\n            distance: this.PRIVATE.getDragDistance(evt),\n            duration: evt.timeStamp - this.PRIVATE.initialTimestamp\n          },\n          position: this.PRIVATE.getPointerPosition(evt, false)\n        }))\n\n        this.emit(dragendEvent)\n        this.PRIVATE.reset()\n      },\n\n      mouseupHandler: evt => {\n        this.PRIVATE.forwardEvent(evt, 'pointerup', {}, document.body)\n      },\n\n      touchendHandler: evt => {\n        // document.removeEventListener(this.PRIVATE.pointerEventsSupported ? 'pointermove' : 'mousemove', this.PRIVATE.pointerMoveHandler)\n      },\n\n      applyBodyListeners: () => {\n        document.body.addEventListener('pointerup', this.PRIVATE.pointerupHandler)\n        document.body.addEventListener('mouseup', this.PRIVATE.mouseupHandler)\n        document.body.addEventListener('touchend', this.PRIVATE.touchendHandler)\n      },\n\n      removeBodyListeners: () => {\n        document.body.removeEventListener('pointerup', this.PRIVATE.pointerupHandler)\n        document.body.removeEventListener('mouseup', this.PRIVATE.mouseupHandler)\n        document.body.removeEventListener('touchend', this.PRIVATE.touchendHandler)\n        document.body.removeEventListener(this.PRIVATE.pointerEventsSupported ? 'pointermove' : 'mousemove', this.PRIVATE.pointerMoveHandler)\n      },\n\n      initiateDrag: () => {\n        this.PRIVATE.applyBodyListeners()\n\n        this.setAttribute(this.free ? 'dragging' : 'ghost', '')\n        this.PRIVATE.dragIsActive = true\n        // this.emit(new CustomEvent('after.drag.start', this.PRIVATE.getEventData(evt, {\n        //\n        // })))\n      },\n\n      getRelativePointerPosition: (relWidth, relHeight, left, top) => {\n        let right = relWidth - left\n        let bottom = relHeight - top\n\n        return {\n          x: left,\n          y: top,\n\n          top: {\n            px: top,\n            pct: this.UTIL.getPercentageDecimal(top, relHeight)\n          },\n\n          right: {\n            px: right,\n            pct: this.UTIL.getPercentageDecimal(right, relWidth)\n          },\n\n          bottom: {\n            px: bottom,\n            pct: this.UTIL.getPercentageDecimal(bottom, relHeight)\n          },\n\n          left: {\n            px: left,\n            pct: this.UTIL.getPercentageDecimal(left, relWidth)\n          }\n        }\n      },\n\n      getPercentageDecimal: (portion, whole, decimalPlaces = null) => {\n        let decimal = portion / whole\n\n        if (decimal < 0) {\n          return 0\n        }\n\n        if (decimalPlaces !== null) {\n          return decimal.toFixed(decimalPlaces)\n        }\n\n        return decimal\n      },\n\n      getPointerPosition: (evt, offset = true, client = true, doc = true,) => {\n        let obj = {}\n\n        if (offset) {\n          obj.offset = this.PRIVATE.getRelativePointerPosition(this.offsetWidth, this.offsetHeight, evt.offsetX, evt.offsetY)\n        }\n\n        if (client) {\n          obj.client = this.PRIVATE.getRelativePointerPosition(document.documentElement.clientWidth, document.documentElement.clientHeight, evt.clientX, evt.clientY)\n        }\n\n        if (doc) {\n          obj.document = this.PRIVATE.getRelativePointerPosition(document.documentElement.scrollWidth, document.documentElement.scrollHeight, evt.pageX, evt.pageY)\n        }\n\n        return obj\n      },\n\n      getEventData: (evt, props = {}) => {\n        let config = {\n          cancelable: true,\n          composed: true,\n\n          detail: Object.assign({}, {\n            altKey: evt.altKey,\n            ctrlKey: evt.ctrlKey,\n            metaKey: evt.metaKey,\n            shiftKey: evt.shiftKey,\n            types: this.PRIVATE.types\n          }, props)\n        }\n\n        Object.defineProperty(config.detail, 'data', {\n          set: value => this.data = value,\n          get: () => this.data\n        })\n\n        return config\n      },\n\n      pointerMoveHandler: evt => {\n        if (!this.PRIVATE.dragIsActive) {\n          if (!this.free) {\n            this.PRIVATE.initializeClone()\n          }\n\n          let dragstartEvent = new CustomEvent('drag.start', this.PRIVATE.getEventData(evt, {\n            position: this.PRIVATE.getPointerPosition(evt)\n          }))\n\n          this.emit(dragstartEvent)\n\n          if (dragstartEvent.defaultPrevented) {\n            return\n          }\n\n          this.PRIVATE.initiateDrag()\n        }\n\n        let dragEvent = new CustomEvent('drag', this.PRIVATE.getEventData(evt, {\n          canDrop: this.PRIVATE.canDrop,\n          drag: {\n            distance: this.PRIVATE.getDragDistance(evt),\n            duration: evt.timeStamp - this.PRIVATE.initialTimestamp\n          },\n          position: this.PRIVATE.getPointerPosition(evt, false)\n        }))\n\n        this.emit(dragEvent)\n\n        if (dragEvent.defaultPrevented) {\n          return\n        }\n\n        this.PRIVATE.updatePosition(evt)\n      },\n\n      getDragDistance: evt => ({\n        x: Math.abs(this.PRIVATE.initialPosition.x - evt.pageX),\n        y: Math.abs(this.PRIVATE.initialPosition.y - evt.pageY)\n      }),\n\n      reset: () => {\n        if (this.free) {\n          this.removeAttribute('dragging')\n        } else {\n          this.removeAttribute('ghost')\n\n          if (this.PRIVATE.clone !== null) {\n            document.body.removeChild(this.PRIVATE.clone)\n            this.PRIVATE.clone = null\n          }\n        }\n\n        this.PRIVATE.dragIsActive = false\n        this.PRIVATE.pointerOffset = null\n        this.PRIVATE.removeBodyListeners()\n        this.PRIVATE.dropTargets = null\n        this.PRIVATE.initialPosition = null\n        this.PRIVATE.initialTimestamp = null\n      },\n\n      storeDropTargets: () => {\n        this.PRIVATE.dropTargets = []\n        let allDropTargets = document.querySelectorAll('author-droptarget')\n\n        this.on('handshake.accepted', this.PRIVATE.handshakeAcceptedHandler)\n\n        for (let dropTarget of allDropTargets) {\n          this.emit('handshake.offered', {\n            draggable: this,\n            types: this.PRIVATE.types\n          }, dropTarget)\n        }\n\n        this.off('handshake.accepted', this.PRIVATE.handshakeHandler)\n      },\n\n      synchronizeStyles: () => {\n        let { clone, getComputedStylesCssText } = this.PRIVATE\n\n        clone.style.cssText = getComputedStylesCssText(this)\n\n        let children = this.getElementsByTagName('*')\n        let cloneChildren = clone.getElementsByTagName('*')\n\n        if (children.length > 0) {\n          for (let i = 0; i < children.length; i++) {\n            cloneChildren[i].style.cssText = getComputedStylesCssText(children[i])\n          }\n        }\n      },\n\n      updatePosition: evt => {\n        let { clone, dimensions, originalCoordinates, pointerOffset } = this.PRIVATE\n        let newCoordinates = {\n          x: evt.clientX - pointerOffset.x,\n          y: evt.clientY - pointerOffset.y\n        }\n\n        if (this.free) {\n          newCoordinates = {\n            x: newCoordinates.x - (originalCoordinates.x - window.scrollX),\n            y: newCoordinates.y - (originalCoordinates.y - window.scrollY)\n          }\n\n          return this.UTIL.setStyleProperty('dragging', 'transform', `translate(${newCoordinates.x}px, ${newCoordinates.y}px)`)\n        }\n\n        clone.UTIL.setStyleProperties('dragging', [\n          {\n            name: 'left',\n            value: `${newCoordinates.x}px`,\n            important: true\n          },\n          {\n            name: 'top',\n            value: `${newCoordinates.y}px`,\n            important: true\n          }\n        ])\n      }\n    })\n\n    this.UTIL.registerListeners(this, {\n      'attribute.changed': evt => {\n        let { attribute, newValue, oldValue } = evt.detail\n\n        switch (attribute) {\n          case 'free':\n            if (!this.free) {\n              this.UTIL.removeStyleProperty('dragging', 'transform')\n            }\n            break\n        }\n      },\n\n      connected: () => {\n        this.UTIL.insertStyleRule('dragging', ':host {}')\n\n        this.emit('author-draggable.connected', {\n          draggable: this\n        }, window)\n      },\n\n      mousedown: evt => {\n        if (this.PRIVATE.userIsTouching) {\n          return evt.preventDefault()\n        }\n\n        this.PRIVATE.forwardEvent(evt, 'pointerdown')\n      },\n\n      touchstart: evt => {\n        evt.preventDefault()\n        this.PRIVATE.userIsTouching = true\n        this.PRIVATE.forwardEvent(evt, 'pointerdown')\n      },\n\n      pointerup: evt => {\n        this.PRIVATE.reset()\n      },\n\n      pointerdown: evt => {\n        let client = {}\n\n        this.PRIVATE.initialTimestamp = evt.timeStamp\n\n        if (evt instanceof CustomEvent) {\n          client.x = evt.detail.originalEvent.clientX\n          client.y = evt.detail.originalEvent.clientY\n        } else {\n          client.x = evt.clientX\n          client.y = evt.clientY\n        }\n\n        this.PRIVATE.initialPosition = {\n          x: client.x,\n          y: client.y\n        }\n\n        this.PRIVATE.pointerOffset = {\n          x: client.x - this.PRIVATE.dimensions.left,\n          y: client.y - this.PRIVATE.dimensions.top\n        }\n\n        document.body.addEventListener(this.PRIVATE.pointerEventsSupported ? 'pointermove' : 'mousemove', this.PRIVATE.pointerMoveHandler)\n        this.PRIVATE.storeDropTargets()\n      },\n\n      rendered: () => {\n        this.UTIL.defineProperty('originalCoordinates', {\n          private: true,\n          readonly: true,\n          default: {\n            x: this.PRIVATE.dimensions.left + window.scrollX,\n            y: this.PRIVATE.dimensions.top + window.scrollY\n          }\n        })\n      }\n    })\n  }\n\n  static get observedAttributes () {\n    return ['direction', 'disabled', 'free', 'min-drag-distance', 'max-drag-distance', 'type']\n  }\n}\n\ncustomElements.define('author-draggable', AuthorDraggableElement)\n\nexport default AuthorDraggableElement\n"],"names":["AuthorDraggableElement","AuthorBaseElement","HTMLElement","[object Object]","super","this","UTIL","defineAttributes","direction","default","disabled","free","max-drag-distance","min-drag-distance","type","defineProperties","acceptedConstraintKeys","private","readonly","canDrop","clone","constraints","get","replace","trim","split","data","dimensions","getBoundingClientRect","dragArea","dragAreas","document","querySelectorAll","contains","body","dragIsActive","dropTargets","initialPosition","initialTimestamp","pointerEventsSupported","undefined","window","PointerEvent","pointerOffset","userIsTouching","types","definePrivateMethods","forwardEvent","evt","newEvtName","detail","target","preventDefault","originalEvent","PRIVATE","emit","getComputedStylesCssText","element","computed","getComputedStyle","acc","cssText","property","push","join","handshakeAcceptedHandler","dropTarget","on","initializeClone","setAttribute","cloneNode","synchronizeStyles","sourceElement","removeAttribute","appendChild","pointerupHandler","dragendEvent","CustomEvent","getEventData","drag","distance","getDragDistance","duration","timeStamp","position","getPointerPosition","reset","mouseupHandler","touchendHandler","applyBodyListeners","addEventListener","removeBodyListeners","removeEventListener","pointerMoveHandler","initiateDrag","getRelativePointerPosition","relWidth","relHeight","left","top","right","bottom","x","y","px","pct","getPercentageDecimal","portion","whole","decimalPlaces","decimal","toFixed","offset","client","doc","obj","offsetWidth","offsetHeight","offsetX","offsetY","documentElement","clientWidth","clientHeight","clientX","clientY","scrollWidth","scrollHeight","pageX","pageY","props","config","cancelable","composed","Object","assign","altKey","ctrlKey","metaKey","shiftKey","defineProperty","set","value","dragstartEvent","defaultPrevented","dragEvent","updatePosition","Math","abs","removeChild","storeDropTargets","allDropTargets","draggable","off","handshakeHandler","style","children","getElementsByTagName","cloneChildren","length","i","originalCoordinates","newCoordinates","scrollX","scrollY","setStyleProperty","setStyleProperties","name","important","registerListeners","attribute.changed","attribute","newValue","oldValue","removeStyleProperty","connected","insertStyleRule","mousedown","touchstart","pointerup","pointerdown","rendered","observedAttributes","customElements","define"],"mappings":"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"}